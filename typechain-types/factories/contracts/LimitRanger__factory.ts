/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LimitRanger,
  LimitRangerInterface,
} from "../../contracts/LimitRanger";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "_nonfungiblePositionManager",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_uniswapV3Factory",
        type: "address",
      },
      {
        internalType: "contract IWETH9",
        name: "_weth9",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sellAbove",
        type: "bool",
      },
    ],
    name: "AddPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "CancelPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ClosePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "DepositsActiveSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newFeeReceiver",
        type: "address",
      },
    ],
    name: "FeeReceiverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newFee",
        type: "uint16",
      },
    ],
    name: "MinimumFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RemovePosition",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelPosition",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentMinFee",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getOwnedPositions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPositionInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "int24",
            name: "sellTarget",
            type: "int24",
          },
          {
            internalType: "uint16",
            name: "fee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "sellAboveTarget",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "unwrapToNative",
            type: "bool",
          },
        ],
        internalType: "struct LimitRanger.PositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "token0Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Amount",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "protocolFee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "unwrapToNative",
            type: "bool",
          },
        ],
        internalType: "struct LimitRanger.MintParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mintNewPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonfungiblePositionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "sellTarget",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "sellAboveTarget",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "unwrapToNative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "retrieveERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieveEth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "retrieveNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "setDepositsActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
    ],
    name: "setMinimumFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "setProtocolFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "stopPosition",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniNft",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth9",
    outputs: [
      {
        internalType: "contract IWETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002eb138038062002eb18339810160408190526200003591620000a7565b6001600160601b0319606093841b8116608081905292841b811660a05260e09290925290911b1660c052600080546001600160a01b0319908116339081179092556001805460ff60b01b1961ffff60a01b199190931690931792909216600160a01b1716600160b01b17905562000113565b600080600060608486031215620000bc578283fd5b8351620000c981620000fa565b6020850151909350620000dc81620000fa565b6040850151909250620000ef81620000fa565b809150509250925092565b6001600160a01b03811681146200011057600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c612d07620001aa600039806112ea5250806106315280610aa05280610bd75280610de25280610e415280611f915280611ffa528061208f5250806106d552806108c8528061183f5250806104a95280610b905280610ce45280610e8b5280611142528061147852806116665280611a175280611afe5250612d076000f3fe6080604052600436106101635760003560e01c806386d087fb116100c0578063c9a9735811610074578063d619d21611610059578063d619d216146103cd578063e671e1f4146103e2578063f275c0ce146103f75761016a565b8063c9a973581461038d578063cd4e9ffa146103ad5761016a565b8063b103dd29116100a5578063b103dd2914610338578063b44a272214610358578063c41a360a1461036d5761016a565b806386d087fb146102eb578063b0ec0c941461030b5761016a565b806350879c1c116101175780635b549182116100fc5780635b549182146102895780637bcaa4851461029e5780637d64a448146102cb5761016a565b806350879c1c1461023a578063519f50991461025c5761016a565b806317893e3c1161014857806317893e3c146101c757806346877b1a146101f85780634ab9bc80146102185761016a565b80630a1d7c5f1461016f578063150b7a02146101915761016a565b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a36600461248e565b61040c565b005b34801561019d57600080fd5b506101b16101ac3660046122b0565b61049c565b6040516101be9190612700565b60405180910390f35b3480156101d357600080fd5b506101e76101e236600461248e565b610534565b6040516101be959493929190612678565b34801561020457600080fd5b5061018f610213366004612278565b61057e565b34801561022457600080fd5b5061022d61061e565b6040516101be9190612c39565b34801561024657600080fd5b5061024f61062f565b6040516101be9190612618565b34801561026857600080fd5b5061027c61027736600461248e565b610653565b6040516101be9190612beb565b34801561029557600080fd5b5061024f6106d3565b3480156102aa57600080fd5b506102be6102b936600461248e565b6106f7565b6040516101be91906126f5565b3480156102d757600080fd5b5061018f6102e63660046123b6565b61076c565b6102fe6102f936600461239e565b6107fa565b6040516101be9190612c48565b34801561031757600080fd5b5061032b610326366004612278565b610ffc565b6040516101be91906126b1565b34801561034457600080fd5b5061018f610353366004612278565b611068565b34801561036457600080fd5b5061024f611140565b34801561037957600080fd5b5061024f61038836600461248e565b611164565b34801561039957600080fd5b5061018f6103a836600461234a565b61117f565b3480156103b957600080fd5b506102be6103c836600461248e565b61120b565b3480156103d957600080fd5b506102be611291565b3480156103ee57600080fd5b5061024f6112e8565b34801561040357600080fd5b506102be61130c565b60008181526002602052604090205481906001600160a01b0316331461044d5760405162461bcd60e51b81526004016104449061297d565b60405180910390fd5b610457823361131c565b336001600160a01b03167faa1d04eb954a2b38e872304c999eb9f06b5f86621d9bc8a57eb4e66280005a96836040516104909190612c48565b60405180910390a25050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e65760405162461bcd60e51b815260040161044490612764565b61050984627fffff600188600160149054906101000a900461ffff1660006114e8565b507f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6002602081905260009182526040909120546001600160a01b03811691600160a01b8204900b9061ffff600160b81b8204169060ff600160c81b8204811691600160d01b90041685565b6000546001600160a01b031633146105a85760405162461bcd60e51b815260040161044490612920565b6001600160a01b0381166105bb57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90610613908390612618565b60405180910390a150565b600154600160a01b900461ffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b61065b612209565b50600081815260026020818152604092839020835160a08101855290546001600160a01b0381168252600160a01b8104840b840b90930b9181019190915261ffff600160b81b8304169281019290925260ff600160c81b8204811615156060840152600160d01b90910416151560808201525b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818152600260205260408120546001600160a01b03168161071b84600161165c565b9050801561076557816001600160a01b03167fd166759110875e7043f195882c2c5c5ae3e22d3bed496bb1da5b0a6efc1bbad68560405161075c9190612c48565b60405180910390a25b9392505050565b6000546001600160a01b031633146107965760405162461bcd60e51b815260040161044490612920565b600180547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff16600160a01b61ffff8416021790556040517f5fc7685da41ea37ba03394f9e2de6b67c85c29d24b740fbc171e960a2f74972f90610613908390612c39565b600154600090600160b01b900460ff166108265760405162461bcd60e51b815260040161044490612855565b8160e001358042111561084b5760405162461bcd60e51b8152600401610444906128e9565b6040830135158061085e57506060830135155b61087a5760405162461bcd60e51b81526004016104449061279b565b600154600160a01b900461ffff1661089a610120850161010086016123b6565b61ffff1610156108bc5760405162461bcd60e51b815260040161044490612a6e565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631698ee826108fa6020870187612278565b61090a6040880160208901612278565b61091a60e0890160c08a01612472565b6040518463ffffffff1660e01b815260040161093893929190612650565b60206040518083038186803b15801561095057600080fd5b505afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190612294565b90506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156109c557600080fd5b505afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd91906123d2565b5050505050915050600085604001351115610a4c57610a2260a0860160808701612382565b60020b8160020b1315610a475760405162461bcd60e51b815260040161044490612a11565b610a81565b610a5c60c0860160a08701612382565b60020b8160020b1215610a815760405162461bcd60e51b815260040161044490612a11565b5050604083013515610bc1576000610a9c6020850185612278565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614610bbb576000816001600160a01b03166323b872dd333088604001356040518463ffffffff1660e01b8152600401610b0d9392919061262c565b602060405180830381600087803b158015610b2757600080fd5b505af1158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f9190612366565b905080610b7e5760405162461bcd60e51b81526004016104449061272d565b610bb9610b8e6020870187612278565b7f00000000000000000000000000000000000000000000000000000000000000008760400135611bfd565b505b50610d11565b6000610bd36040850160208601612278565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614610d0f576040517f23b872dd0000000000000000000000000000000000000000000000000000000081526000906001600160a01b038316906323b872dd90610c5e903390309060608b01359060040161262c565b602060405180830381600087803b158015610c7857600080fd5b505af1158015610c8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb09190612366565b905080610ccf5760405162461bcd60e51b81526004016104449061272d565b610d0d610ce26040870160208801612278565b7f00000000000000000000000000000000000000000000000000000000000000008760600135611bfd565b505b505b60408051610160810190915260009080610d2e6020870187612278565b6001600160a01b03168152602001856020016020810190610d4f9190612278565b6001600160a01b03168152602001610d6d60e0870160c08801612472565b62ffffff168152602001610d8760a0870160808801612382565b60020b8152602001610d9f60c0870160a08801612382565b60020b815260200185604001358152602001856060013581526020016000815260200160008152602001306001600160a01b0316815260200142815250905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856000016020810190610e1d9190612278565b6001600160a01b03161415610e3757506040840135610e87565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610e716040870160208801612278565b6001600160a01b03161415610e87575060608401355b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638831645683856040518363ffffffff1660e01b8152600401610ed69190612b3d565b6080604051808303818588803b158015610eef57600080fd5b505af1158015610f03573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f2891906124be565b50919650915050604086013515610f7e57610f7985610f4d60c0890160a08a01612382565b600133610f626101208c016101008d016123b6565b610f746101408d016101208e0161234a565b6114e8565b610fa7565b610fa785610f9260a0890160808a01612382565b600033610f626101208c016101008d016123b6565b336001600160a01b03167f84857eda562bb68e0b47f5fdb7037e19a483b460c88f0399b98c01d91ac7b1f9868360008a6040013511604051610feb93929190612c51565b60405180910390a250505050919050565b6001600160a01b03811660009081526003602090815260409182902080548351818402810184019094528084526060939283018282801561105c57602002820191906000526020600020905b815481526020019060010190808311611048575b50505050509050919050565b6000546001600160a01b031633146110925760405162461bcd60e51b815260040161044490612920565b6001546040517f70a08231000000000000000000000000000000000000000000000000000000008152829161113c9183916001600160a01b0390811691908316906370a08231906110e7903090600401612618565b60206040518083038186803b1580156110ff57600080fd5b505afa158015611113573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113791906124a6565b611d94565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000908152600260205260409020546001600160a01b031690565b6000546001600160a01b031633146111a95760405162461bcd60e51b815260040161044490612920565b600180547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b831515021790556040517f1117e04c4b9c84c94ec4def2d3be770c1de27588c20313630309abe93ebd6651906106139083906126f5565b60008181526002602052604081205482906001600160a01b031633146112435760405162461bcd60e51b81526004016104449061297d565b600061125084600061165c565b9050801561076557336001600160a01b03167f1efe7349ed20ea755a19f4f0d5beec843d0d1c73eeb8d60e53fa7eb2537e231b8560405161075c9190612c48565b600080546001600160a01b031633146112bc5760405162461bcd60e51b815260040161044490612920565b6001546040516001600160a01b03909116904780156108fc02916000818181858888f194505050505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600154600160b01b900460ff1681565b600082815260026020908152604080832080547fffffffffff00000000000000000000000000000000000000000000000000000016905560048252808320546001600160a01b0385168452600390925282205490919061137d906001611f24565b6001600160a01b038416600090815260036020526040812080549293509091839081106113a657fe5b906000526020600020015490508060036000866001600160a01b03166001600160a01b0316815260200190815260200160002084815481106113e457fe5b60009182526020808320909101929092556001600160a01b038616815260039091526040902080548061141357fe5b60008281526020808220830160001990810183905590920190925586825260049081905260408083208390558383529182902085905590517f42842e0e0000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916342842e0e916114af91309189918b910161262c565b600060405180830381600087803b1580156114c957600080fd5b505af11580156114dd573d6000803e3d6000fd5b505050505050505050565b6040805160a0810182526001600160a01b03948516808252600297880b602080840191825261ffff968716848601908152981515606085019081529515156080850190815260008c81528b83528681209551865494519b51985192511515600160d01b027fffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffff931515600160c81b027fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff9a909b16600160b81b027fffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffff9d909e0b62ffffff16600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff92909c1673ffffffffffffffffffffffffffffffffffffffff19909616959095171699909917999099169990991794909416949094179590951691909117909355815260038352818120805460018101825590825283822081018590559381526004909252902055565b60008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399fbab88886040518263ffffffff1660e01b81526004016116b09190612c48565b6101806040518083038186803b1580156116c957600080fd5b505afa1580156116dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611701919061251c565b505050509750505095509550955050506000600260008981526020019081526020016000206040518060a00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900461ffff1661ffff1661ffff1681526020016000820160199054906101000a900460ff1615151515815260200160008201601a9054906101000a900460ff161515151581525050905060006001600160a01b031681600001516001600160a01b0316141561180c5760405162461bcd60e51b8152600401610444906129da565b6040517f1698ee820000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631698ee829061187890899089908990600401612650565b60206040518083038186803b15801561189057600080fd5b505afa1580156118a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c89190612294565b905087156119b0576000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561190b57600080fd5b505afa15801561191f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194391906123d2565b505050505091505082606001511561198457826020015160020b8160020b121561197f5760405162461bcd60e51b8152600401610444906127f8565b6119ae565b826020015160020b8160020b13156119ae5760405162461bcd60e51b81526004016104449061288c565b505b6040805160a0810182528a81526fffffffffffffffffffffffffffffffff851660208201526000818301819052606082015242608082015290517f0c49ccbe0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c49ccbe90611a4c908490600401612af1565b6040805180830381600087803b158015611a6557600080fd5b505af1158015611a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9d91906124f9565b5050604080516080810182528b81523060208201526fffffffffffffffffffffffffffffffff818301819052606082015290517ffc6f78650000000000000000000000000000000000000000000000000000000081529092506000915081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063fc6f786590611b3b908690600401612aa5565b6040805180830381600087803b158015611b5457600080fd5b505af1158015611b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8c91906124f9565b915091506000808b15611bb257604086015161ffff166103e88086048202935084040290505b611bc784838c89600001518a60800151611f81565b611bdc83828b89600001518a60800151611f81565b611bea8d876000015161131c565b5060019c9b505050505050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611ca75780518252601f199092019160209182019101611c88565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d09576040519150601f19603f3d011682016040523d82523d6000602084013e611d0e565b606091505b5091509150818015611d3c575080511580611d3c5750808060200190516020811015611d3957600080fd5b50515b611d8d576040805162461bcd60e51b815260206004820152600260248201527f5341000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611e3e5780518252601f199092019160209182019101611e1f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611ea0576040519150601f19603f3d011682016040523d82523d6000602084013e611ea5565b606091505b5091509150818015611ed3575080511580611ed35750808060200190516020811015611ed057600080fd5b50515b611d8d576040805162461bcd60e51b815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600082821115611f7b576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b841561207f57808015611fc557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b15612072576040517f2e1a7d4d0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d9061202f908890600401612c48565b600060405180830381600087803b15801561204957600080fd5b505af115801561205d573d6000803e3d6000fd5b5050505061206d828587036120fb565b61207f565b61207f8383868803611d94565b8315611d8d578080156120c357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b156120e3576001546120de906001600160a01b0316856120fb565b611d8d565b600154611d8d9084906001600160a01b031686611d94565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106121475780518252601f199092019160209182019101612128565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146121a9576040519150601f19603f3d011682016040523d82523d6000602084013e6121ae565b606091505b5050905080612204576040805162461bcd60e51b815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b80516106ce81612c7b565b80516106ce81612ca1565b80516fffffffffffffffffffffffffffffffff811681146106ce57600080fd5b80516106ce81612cc0565b600060208284031215612289578081fd5b813561076581612c7b565b6000602082840312156122a5578081fd5b815161076581612c7b565b6000806000806000608086880312156122c7578081fd5b85356122d281612c7b565b945060208601356122e281612c7b565b935060408601359250606086013567ffffffffffffffff80821115612305578283fd5b818801915088601f830112612318578283fd5b813581811115612326578384fd5b896020828501011115612337578384fd5b9699959850939650602001949392505050565b60006020828403121561235b578081fd5b813561076581612c93565b600060208284031215612377578081fd5b815161076581612c93565b600060208284031215612393578081fd5b813561076581612ca1565b600061014082840312156123b0578081fd5b50919050565b6000602082840312156123c7578081fd5b813561076581612cb0565b600080600080600080600060e0888a0312156123ec578182fd5b87516123f781612c7b565b602089015190975061240881612ca1565b604089015190965061241981612cb0565b606089015190955061242a81612cb0565b608089015190945061243b81612cb0565b60a089015190935060ff81168114612451578283fd5b60c089015190925061246281612c93565b8091505092959891949750929550565b600060208284031215612483578081fd5b813561076581612cc0565b60006020828403121561249f578081fd5b5035919050565b6000602082840312156124b7578081fd5b5051919050565b600080600080608085870312156124d3578182fd5b845193506124e36020860161224d565b6040860151606090960151949790965092505050565b6000806040838503121561250b578182fd5b505080516020909101519092909150565b6000806000806000806000806000806000806101808d8f03121561253e578586fd5b8c516bffffffffffffffffffffffff81168114612559578687fd5b9b5061256760208e01612237565b9a5061257560408e01612237565b995061258360608e01612237565b985061259160808e0161226d565b975061259f60a08e01612242565b96506125ad60c08e01612242565b95506125bb60e08e0161224d565b94506101008d015193506101208d015192506125da6101408e0161224d565b91506125e96101608e0161224d565b90509295989b509295989b509295989b565b6001600160a01b03169052565b60020b9052565b62ffffff169052565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b6001600160a01b0395909516855260029390930b602085015261ffff919091166040840152151560608301521515608082015260a00190565b6020808252825182820181905260009190848201906040850190845b818110156126e9578351835292840192918401916001016126cd565b50909695505050505050565b901515815260200190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b60208082526018908201527f5472616e73666572206f6620746f6b656e206661696c65640000000000000000604082015260600190565b60208082526015908201527f4f6e6c7920706f736974696f6e206d616e616765720000000000000000000000604082015260600190565b6020808252602a908201527f546f6b656e20616d6f756e74206f6620746f6b656e30206f7220746f6b656e3160408201527f206d757374206265203000000000000000000000000000000000000000000000606082015260800190565b6020808252603d908201527f53656c6c20746172676574206e6f7420726561636865642e2043757272656e7460408201527f207469636b2062656c6f772073656c6c20746172676574207469636b2e000000606082015260800190565b6020808252601f908201527f4465706f73697473206172652063757272656e746c792064697361626c656400604082015260600190565b6020808252603d908201527f53656c6c20746172676574206e6f7420726561636865642e2043757272656e7460408201527f207469636b2061626f76652073656c6c20746172676574207469636b2e000000606082015260800190565b60208082526013908201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604082015260600190565b6020808252602e908201527f4f70657261746f6e206f6e6c7920616c6c6f77656420666f72206f706572617460408201527f6f72206f6620636f6e7472616374000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4f7065726174696f6e206f6e6c7920616c6c6f77656420666f72206f776e657260408201527f206f6620706f736974696f6e0000000000000000000000000000000000000000606082015260800190565b60208082526012908201527f506f736974696f6e206e6f7420666f756e640000000000000000000000000000604082015260600190565b60208082526036908201527f43757272656e74207072696365206f6620706f6f6c20646f65736e2774206d6160408201527f74636820646573697265642073656c6c2072616e676500000000000000000000606082015260800190565b60208082526018908201527f50726f746f636f6c206665652073657420746f6f206c6f770000000000000000604082015260600190565b815181526020808301516001600160a01b0316908201526040808301516fffffffffffffffffffffffffffffffff90811691830191909152606092830151169181019190915260800190565b600060a082019050825182526fffffffffffffffffffffffffffffffff602084015116602083015260408301516040830152606083015160608301526080830151608083015292915050565b600061016082019050612b518284516125fb565b6020830151612b6360208401826125fb565b506040830151612b76604084018261260f565b506060830151612b896060840182612608565b506080830151612b9c6080840182612608565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151612bda828501826125fb565b505061014092830151919092015290565b600060a0820190506001600160a01b038351168252602083015160020b602083015261ffff604084015116604083015260608301511515606083015260808301511515608083015292915050565b61ffff91909116815260200190565b90815260200190565b9283526fffffffffffffffffffffffffffffffff9190911660208301521515604082015260600190565b6001600160a01b0381168114612c9057600080fd5b50565b8015158114612c9057600080fd5b8060020b8114612c9057600080fd5b61ffff81168114612c9057600080fd5b62ffffff81168114612c9057600080fdfea2646970667358221220e1f81d24e3827665c03d59b04a91b1aba23992bf484d1e6642339a5b64c80acd64736f6c63430007060033";

type LimitRangerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitRangerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitRanger__factory extends ContractFactory {
  constructor(...args: LimitRangerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nonfungiblePositionManager: PromiseOrValue<string>,
    _uniswapV3Factory: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LimitRanger> {
    return super.deploy(
      _nonfungiblePositionManager,
      _uniswapV3Factory,
      _weth9,
      overrides || {}
    ) as Promise<LimitRanger>;
  }
  override getDeployTransaction(
    _nonfungiblePositionManager: PromiseOrValue<string>,
    _uniswapV3Factory: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nonfungiblePositionManager,
      _uniswapV3Factory,
      _weth9,
      overrides || {}
    );
  }
  override attach(address: string): LimitRanger {
    return super.attach(address) as LimitRanger;
  }
  override connect(signer: Signer): LimitRanger__factory {
    return super.connect(signer) as LimitRanger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitRangerInterface {
    return new utils.Interface(_abi) as LimitRangerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimitRanger {
    return new Contract(address, _abi, signerOrProvider) as LimitRanger;
  }
}
