/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LimitRanger,
  LimitRangerInterface,
} from "../../contracts/LimitRanger";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "_nonfungiblePositionManager",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_uniswapV3Factory",
        type: "address",
      },
      {
        internalType: "contract IWETH9",
        name: "_weth9",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sellAbove",
        type: "bool",
      },
    ],
    name: "AddPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "CancelPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ClosePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "DepositsActiveSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newFeeReceiver",
        type: "address",
      },
    ],
    name: "FeeReceiverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newFee",
        type: "uint16",
      },
    ],
    name: "MinimumFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RemovePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "reward",
        type: "uint8",
      },
    ],
    name: "StopPositionRewardSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelPosition",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentMinFee",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentStopPositionReward",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getOwnedPositions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPositionInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "int24",
            name: "sellTarget",
            type: "int24",
          },
          {
            internalType: "uint16",
            name: "fee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "sellAboveTarget",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "unwrapToNative",
            type: "bool",
          },
        ],
        internalType: "struct LimitRanger.PositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "token0Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Amount",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "protocolFee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "unwrapToNative",
            type: "bool",
          },
        ],
        internalType: "struct LimitRanger.MintParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mintNewPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonfungiblePositionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "sellTarget",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "sellAboveTarget",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "unwrapToNative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeReceiver",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "retrieveERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieveEth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "retrieveNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "setDepositsActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
    ],
    name: "setMinimumFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "setProtocolFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "reward",
        type: "uint8",
      },
    ],
    name: "setStopPositionReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "stopPosition",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniNft",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth9",
    outputs: [
      {
        internalType: "contract IWETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002f9238038062002f928339810160408190526200003591620000a8565b6001600160601b0319606093841b8116608081905292841b811660a05260e09290925290911b1660c052600080546001600160a01b0319908116339081179092556001805461ffff60b01b1961ffff60a01b199190931690931792909216600160a01b1716600160b81b17905562000114565b600080600060608486031215620000bd578283fd5b8351620000ca81620000fb565b6020850151909350620000dd81620000fb565b6040850151909250620000f081620000fb565b809150509250925092565b6001600160a01b03811681146200011157600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c612de7620001ab600039806113a452508061062a5280610b4a5280610c815280610e8c5280610eeb528061204b52806120b4528061215c52806121dc52508061077f52806109725280611785525080610c3a5280610d8e5280610f3552806111ec528061153252806115ac528061195d5280611a445250612de76000f3fe6080604052600436106101845760003560e01c80637d64a448116100d6578063c9a973581161007f578063d619d21611610059578063d619d2161461042d578063e671e1f414610442578063f275c0ce146104575761018b565b8063c9a97358146103cb578063cd4e9ffa146103eb578063ce1e09e01461040b5761018b565b8063b103dd29116100b0578063b103dd2914610376578063b44a272214610396578063c41a360a146103ab5761018b565b80637d64a4481461030957806386d087fb14610329578063b0ec0c94146103495761018b565b80634ab9bc8011610138578063519f509911610112578063519f50991461029a5780635b549182146102c75780637bcaa485146102dc5761018b565b80634ab9bc801461024357806350879c1c146102655780635089cb271461027a5761018b565b806317893e3c1161016957806317893e3c146101dd57806339a51be51461020e57806346877b1a146102235761018b565b8063068a3336146101905780630a1d7c5f146101bb5761018b565b3661018b57005b600080fd5b34801561019c57600080fd5b506101a561046c565b6040516101b291906126d1565b60405180910390f35b3480156101c757600080fd5b506101db6101d636600461252b565b61047b565b005b3480156101e957600080fd5b506101fd6101f836600461252b565b61050b565b6040516101b2959493929190612731565b34801561021a57600080fd5b506101a5610555565b34801561022f57600080fd5b506101db61023e3660046123b4565b610564565b34801561024f57600080fd5b50610258610617565b6040516101b29190612cfc565b34801561027157600080fd5b506101a5610628565b34801561028657600080fd5b506101db6102953660046125b9565b61064c565b3480156102a657600080fd5b506102ba6102b536600461252b565b6106fd565b6040516101b29190612cae565b3480156102d357600080fd5b506101a561077d565b3480156102e857600080fd5b506102fc6102f736600461252b565b6107a1565b6040516101b291906127ae565b34801561031557600080fd5b506101db610324366004612458565b610816565b61033c610337366004612440565b6108a4565b6040516101b29190612d0b565b34801561035557600080fd5b506103696103643660046123b4565b6110a6565b6040516101b2919061276a565b34801561038257600080fd5b506101db6103913660046123b4565b611112565b3480156103a257600080fd5b506101a56111ea565b3480156103b757600080fd5b506101a56103c636600461252b565b61120e565b3480156103d757600080fd5b506101db6103e63660046123ec565b611229565b3480156103f757600080fd5b506102fc61040636600461252b565b6112b5565b34801561041757600080fd5b5061042061133b565b6040516101b29190612d3e565b34801561043957600080fd5b506102fc61134b565b34801561044e57600080fd5b506101a56113a2565b34801561046357600080fd5b506102fc6113c6565b6000546001600160a01b031681565b60008181526002602052604090205481906001600160a01b031633146104bc5760405162461bcd60e51b81526004016104b390612a40565b60405180910390fd5b6104c682336113d6565b336001600160a01b03167faa1d04eb954a2b38e872304c999eb9f06b5f86621d9bc8a57eb4e66280005a96836040516104ff9190612d0b565b60405180910390a25050565b6002602081905260009182526040909120546001600160a01b03811691600160a01b8204900b9061ffff600160b81b8204169060ff600160c81b8204811691600160d01b90041685565b6001546001600160a01b031681565b6000546001600160a01b0316331461058e5760405162461bcd60e51b81526004016104b3906129e3565b6001600160a01b0381166105b45760405162461bcd60e51b81526004016104b390612827565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d9061060c9083906126d1565b60405180910390a150565b600154600160a01b900461ffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146106765760405162461bcd60e51b81526004016104b3906129e3565b60648160ff16111561069a5760405162461bcd60e51b81526004016104b3906127b9565b600180547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b60ff8416021790556040517f34ccf789e3d35be7a0c07967faa3b53109194208c75d46bfaf8f14389ae260739061060c908390612d3e565b610705612345565b50600081815260026020818152604092839020835160a08101855290546001600160a01b0381168252600160a01b8104840b840b90930b9181019190915261ffff600160b81b8304169281019290925260ff600160c81b8204811615156060840152600160d01b90910416151560808201525b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818152600260205260408120546001600160a01b0316816107c58460016115a2565b9050801561080f57816001600160a01b03167fd166759110875e7043f195882c2c5c5ae3e22d3bed496bb1da5b0a6efc1bbad6856040516108069190612d0b565b60405180910390a25b9392505050565b6000546001600160a01b031633146108405760405162461bcd60e51b81526004016104b3906129e3565b600180547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff16600160a01b61ffff8416021790556040517f5fc7685da41ea37ba03394f9e2de6b67c85c29d24b740fbc171e960a2f74972f9061060c908390612cfc565b600154600090600160b81b900460ff166108d05760405162461bcd60e51b81526004016104b390612918565b8160e00135804211156108f55760405162461bcd60e51b81526004016104b3906129ac565b6040830135158061090857506060830135155b6109245760405162461bcd60e51b81526004016104b39061285e565b600154600160a01b900461ffff1661094461012085016101008601612458565b61ffff1610156109665760405162461bcd60e51b81526004016104b390612b31565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631698ee826109a460208701876123b4565b6109b460408801602089016123b4565b6109c460e0890160c08a0161250f565b6040518463ffffffff1660e01b81526004016109e293929190612709565b60206040518083038186803b1580156109fa57600080fd5b505afa158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3291906123d0565b90506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610a6f57600080fd5b505afa158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa79190612474565b5050505050915050600085604001351115610af657610acc60a0860160808701612424565b60020b8160020b1315610af15760405162461bcd60e51b81526004016104b390612ad4565b610b2b565b610b0660c0860160a08701612424565b60020b8160020b1215610b2b5760405162461bcd60e51b81526004016104b390612ad4565b5050604083013515610c6b576000610b4660208501856123b4565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614610c65576000816001600160a01b03166323b872dd333088604001356040518463ffffffff1660e01b8152600401610bb7939291906126e5565b602060405180830381600087803b158015610bd157600080fd5b505af1158015610be5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c099190612408565b905080610c285760405162461bcd60e51b81526004016104b3906127f0565b610c63610c3860208701876123b4565b7f00000000000000000000000000000000000000000000000000000000000000008760400135611b43565b505b50610dbb565b6000610c7d60408501602086016123b4565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614610db9576040517f23b872dd0000000000000000000000000000000000000000000000000000000081526000906001600160a01b038316906323b872dd90610d08903390309060608b0135906004016126e5565b602060405180830381600087803b158015610d2257600080fd5b505af1158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5a9190612408565b905080610d795760405162461bcd60e51b81526004016104b3906127f0565b610db7610d8c60408701602088016123b4565b7f00000000000000000000000000000000000000000000000000000000000000008760600135611b43565b505b505b60408051610160810190915260009080610dd860208701876123b4565b6001600160a01b03168152602001856020016020810190610df991906123b4565b6001600160a01b03168152602001610e1760e0870160c0880161250f565b62ffffff168152602001610e3160a0870160808801612424565b60020b8152602001610e4960c0870160a08801612424565b60020b815260200185604001358152602001856060013581526020016000815260200160008152602001306001600160a01b0316815260200142815250905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856000016020810190610ec791906123b4565b6001600160a01b03161415610ee157506040840135610f31565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610f1b60408701602088016123b4565b6001600160a01b03161415610f31575060608401355b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638831645683856040518363ffffffff1660e01b8152600401610f809190612c00565b6080604051808303818588803b158015610f9957600080fd5b505af1158015610fad573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610fd2919061255b565b509196509150506040860135156110285761102385610ff760c0890160a08a01612424565b60013361100c6101208c016101008d01612458565b61101e6101408d016101208e016123ec565b611cda565b611051565b6110518561103c60a0890160808a01612424565b60003361100c6101208c016101008d01612458565b336001600160a01b03167f84857eda562bb68e0b47f5fdb7037e19a483b460c88f0399b98c01d91ac7b1f9868360008a604001351160405161109593929190612d14565b60405180910390a250505050919050565b6001600160a01b03811660009081526003602090815260409182902080548351818402810184019094528084526060939283018282801561110657602002820191906000526020600020905b8154815260200190600101908083116110f2575b50505050509050919050565b6000546001600160a01b0316331461113c5760405162461bcd60e51b81526004016104b3906129e3565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815282916111e69183916001600160a01b0390811691908316906370a08231906111919030906004016126d1565b60206040518083038186803b1580156111a957600080fd5b505afa1580156111bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e19190612543565b611e4e565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000908152600260205260409020546001600160a01b031690565b6000546001600160a01b031633146112535760405162461bcd60e51b81526004016104b3906129e3565b600180547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b831515021790556040517f1117e04c4b9c84c94ec4def2d3be770c1de27588c20313630309abe93ebd66519061060c9083906127ae565b60008181526002602052604081205482906001600160a01b031633146112ed5760405162461bcd60e51b81526004016104b390612a40565b60006112fa8460006115a2565b9050801561080f57336001600160a01b03167f1efe7349ed20ea755a19f4f0d5beec843d0d1c73eeb8d60e53fa7eb2537e231b856040516108069190612d0b565b600154600160b01b900460ff1681565b600080546001600160a01b031633146113765760405162461bcd60e51b81526004016104b3906129e3565b6001546040516001600160a01b03909116904780156108fc02916000818181858888f194505050505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600154600160b81b900460ff1681565b600082815260026020908152604080832080547fffffffffff00000000000000000000000000000000000000000000000000000016905560048252808320546001600160a01b03851684526003909252822054909190611437906001611fde565b6001600160a01b0384166000908152600360205260408120805492935090918390811061146057fe5b906000526020600020015490508060036000866001600160a01b03166001600160a01b03168152602001908152602001600020848154811061149e57fe5b60009182526020808320909101929092556001600160a01b03861681526003909152604090208054806114cd57fe5b60008281526020808220830160001990810183905590920190925586825260049081905260408083208390558383529182902085905590517f42842e0e0000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916342842e0e9161156991309189918b91016126e5565b600060405180830381600087803b15801561158357600080fd5b505af1158015611597573d6000803e3d6000fd5b505050505050505050565b60008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399fbab88886040518263ffffffff1660e01b81526004016115f69190612d0b565b6101806040518083038186803b15801561160f57600080fd5b505afa158015611623573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164791906125d5565b505050509750505095509550955050506000600260008981526020019081526020016000206040518060a00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900461ffff1661ffff1661ffff1681526020016000820160199054906101000a900460ff1615151515815260200160008201601a9054906101000a900460ff161515151581525050905060006001600160a01b031681600001516001600160a01b031614156117525760405162461bcd60e51b81526004016104b390612a9d565b6040517f1698ee820000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631698ee82906117be90899089908990600401612709565b60206040518083038186803b1580156117d657600080fd5b505afa1580156117ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180e91906123d0565b905087156118f6576000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561185157600080fd5b505afa158015611865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118899190612474565b50505050509150508260600151156118ca57826020015160020b8160020b12156118c55760405162461bcd60e51b81526004016104b3906128bb565b6118f4565b826020015160020b8160020b13156118f45760405162461bcd60e51b81526004016104b39061294f565b505b6040805160a0810182528a81526fffffffffffffffffffffffffffffffff851660208201526000818301819052606082015242608082015290517f0c49ccbe0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c49ccbe90611992908490600401612bb4565b6040805180830381600087803b1580156119ab57600080fd5b505af11580156119bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e39190612596565b5050604080516080810182528b81523060208201526fffffffffffffffffffffffffffffffff818301819052606082015290517ffc6f78650000000000000000000000000000000000000000000000000000000081529092506000915081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063fc6f786590611a81908690600401612b68565b6040805180830381600087803b158015611a9a57600080fd5b505af1158015611aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad29190612596565b915091506000808b15611af857604086015161ffff166103e88086048202935084040290505b611b0d84838c89600001518a6080015161203b565b611b2283828b89600001518a6080015161203b565b611b308d87600001516113d6565b5060019c9b505050505050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611bed5780518252601f199092019160209182019101611bce565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611c4f576040519150601f19603f3d011682016040523d82523d6000602084013e611c54565b606091505b5091509150818015611c82575080511580611c825750808060200190516020811015611c7f57600080fd5b50515b611cd3576040805162461bcd60e51b815260206004820152600260248201527f5341000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b6040805160a0810182526001600160a01b03948516808252600297880b602080840191825261ffff968716848601908152981515606085019081529515156080850190815260008c81528b83528681209551865494519b51985192511515600160d01b027fffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffff931515600160c81b027fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff9a909b16600160b81b027fffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffff9d909e0b62ffffff16600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff92909c1673ffffffffffffffffffffffffffffffffffffffff19909616959095171699909917999099169990991794909416949094179590951691909117909355815260038352818120805460018101825590825283822081018590559381526004909252902055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611ef85780518252601f199092019160209182019101611ed9565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f5a576040519150601f19603f3d011682016040523d82523d6000602084013e611f5f565b606091505b5091509150818015611f8d575080511580611f8d5750808060200190516020811015611f8a57600080fd5b50515b611cd3576040805162461bcd60e51b815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600082821115612035576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b84156121395780801561207f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b1561212c576040517f2e1a7d4d0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d906120e9908890600401612d0b565b600060405180830381600087803b15801561210357600080fd5b505af1158015612117573d6000803e3d6000fd5b5050505061212782858703612237565b612139565b6121398383868803611e4e565b8315611cd3576001546064600160b01b90910460ff1685020481801561219057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316145b156121b2576001546121ad906001600160a01b0316828703612237565b6121cc565b6001546121cc9085906001600160a01b0316838803611e4e565b801561222f5781801561221057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316145b156122245761221f3382612237565b61222f565b61222f843383611e4e565b505050505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106122835780518252601f199092019160209182019101612264565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146122e5576040519150601f19603f3d011682016040523d82523d6000602084013e6122ea565b606091505b5050905080612340576040805162461bcd60e51b815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b805161077881612d4c565b805161077881612d72565b80516fffffffffffffffffffffffffffffffff8116811461077857600080fd5b805161077881612d91565b6000602082840312156123c5578081fd5b813561080f81612d4c565b6000602082840312156123e1578081fd5b815161080f81612d4c565b6000602082840312156123fd578081fd5b813561080f81612d64565b600060208284031215612419578081fd5b815161080f81612d64565b600060208284031215612435578081fd5b813561080f81612d72565b60006101408284031215612452578081fd5b50919050565b600060208284031215612469578081fd5b813561080f81612d81565b600080600080600080600060e0888a03121561248e578283fd5b875161249981612d4c565b60208901519097506124aa81612d72565b60408901519096506124bb81612d81565b60608901519095506124cc81612d81565b60808901519094506124dd81612d81565b60a08901519093506124ee81612da2565b60c08901519092506124ff81612d64565b8091505092959891949750929550565b600060208284031215612520578081fd5b813561080f81612d91565b60006020828403121561253c578081fd5b5035919050565b600060208284031215612554578081fd5b5051919050565b60008060008060808587031215612570578182fd5b8451935061258060208601612389565b6040860151606090960151949790965092505050565b600080604083850312156125a8578182fd5b505080516020909101519092909150565b6000602082840312156125ca578081fd5b813561080f81612da2565b6000806000806000806000806000806000806101808d8f0312156125f7578586fd5b8c516bffffffffffffffffffffffff81168114612612578687fd5b9b5061262060208e01612373565b9a5061262e60408e01612373565b995061263c60608e01612373565b985061264a60808e016123a9565b975061265860a08e0161237e565b965061266660c08e0161237e565b955061267460e08e01612389565b94506101008d015193506101208d015192506126936101408e01612389565b91506126a26101608e01612389565b90509295989b509295989b509295989b565b6001600160a01b03169052565b60020b9052565b62ffffff169052565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b6001600160a01b0395909516855260029390930b602085015261ffff919091166040840152151560608301521515608082015260a00190565b6020808252825182820181905260009190848201906040850190845b818110156127a257835183529284019291840191600101612786565b50909695505050505050565b901515815260200190565b60208082526017908201527f726577617264203e313030206e6f7420616c6c6f776564000000000000000000604082015260600190565b60208082526018908201527f5472616e73666572206f6620746f6b656e206661696c65640000000000000000604082015260600190565b60208082526017908201527f3078302061646472657373206e6f7420616c6c6f776564000000000000000000604082015260600190565b6020808252602a908201527f546f6b656e20616d6f756e74206f6620746f6b656e30206f7220746f6b656e3160408201527f206d757374206265203000000000000000000000000000000000000000000000606082015260800190565b6020808252603d908201527f53656c6c20746172676574206e6f7420726561636865642e2043757272656e7460408201527f207469636b2062656c6f772073656c6c20746172676574207469636b2e000000606082015260800190565b6020808252601f908201527f4465706f73697473206172652063757272656e746c792064697361626c656400604082015260600190565b6020808252603d908201527f53656c6c20746172676574206e6f7420726561636865642e2043757272656e7460408201527f207469636b2061626f76652073656c6c20746172676574207469636b2e000000606082015260800190565b60208082526013908201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604082015260600190565b6020808252602e908201527f4f70657261746f6e206f6e6c7920616c6c6f77656420666f72206f706572617460408201527f6f72206f6620636f6e7472616374000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4f7065726174696f6e206f6e6c7920616c6c6f77656420666f72206f776e657260408201527f206f6620706f736974696f6e0000000000000000000000000000000000000000606082015260800190565b60208082526012908201527f506f736974696f6e206e6f7420666f756e640000000000000000000000000000604082015260600190565b60208082526036908201527f43757272656e74207072696365206f6620706f6f6c20646f65736e2774206d6160408201527f74636820646573697265642073656c6c2072616e676500000000000000000000606082015260800190565b60208082526018908201527f50726f746f636f6c206665652073657420746f6f206c6f770000000000000000604082015260600190565b815181526020808301516001600160a01b0316908201526040808301516fffffffffffffffffffffffffffffffff90811691830191909152606092830151169181019190915260800190565b600060a082019050825182526fffffffffffffffffffffffffffffffff602084015116602083015260408301516040830152606083015160608301526080830151608083015292915050565b600061016082019050612c148284516126b4565b6020830151612c2660208401826126b4565b506040830151612c3960408401826126c8565b506060830151612c4c60608401826126c1565b506080830151612c5f60808401826126c1565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151612c9d828501826126b4565b505061014092830151919092015290565b600060a0820190506001600160a01b038351168252602083015160020b602083015261ffff604084015116604083015260608301511515606083015260808301511515608083015292915050565b61ffff91909116815260200190565b90815260200190565b9283526fffffffffffffffffffffffffffffffff9190911660208301521515604082015260600190565b60ff91909116815260200190565b6001600160a01b0381168114612d6157600080fd5b50565b8015158114612d6157600080fd5b8060020b8114612d6157600080fd5b61ffff81168114612d6157600080fd5b62ffffff81168114612d6157600080fd5b60ff81168114612d6157600080fdfea26469706673582212201e67e7ed74b121c474e80ba2c4c5fcaa03f33129ea68ce7f74bb9878240abb5864736f6c63430007060033";

type LimitRangerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitRangerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitRanger__factory extends ContractFactory {
  constructor(...args: LimitRangerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nonfungiblePositionManager: PromiseOrValue<string>,
    _uniswapV3Factory: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LimitRanger> {
    return super.deploy(
      _nonfungiblePositionManager,
      _uniswapV3Factory,
      _weth9,
      overrides || {}
    ) as Promise<LimitRanger>;
  }
  override getDeployTransaction(
    _nonfungiblePositionManager: PromiseOrValue<string>,
    _uniswapV3Factory: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nonfungiblePositionManager,
      _uniswapV3Factory,
      _weth9,
      overrides || {}
    );
  }
  override attach(address: string): LimitRanger {
    return super.attach(address) as LimitRanger;
  }
  override connect(signer: Signer): LimitRanger__factory {
    return super.connect(signer) as LimitRanger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitRangerInterface {
    return new utils.Interface(_abi) as LimitRangerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimitRanger {
    return new Contract(address, _abi, signerOrProvider) as LimitRanger;
  }
}
